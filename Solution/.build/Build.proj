<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="15.0" DefaultTargets="RunAll" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!--(c) 2017 Cyrille Dupuydauby, derived from T.Pierrain work on NFluent -->

  <Import Project="build.tasks" />
 
  <PropertyGroup>
    <Configuration Condition="$(Configuration) == ''">Release</Configuration>
    <PackageStream>alpha</PackageStream>
    <NugetKey>$(MICHONNE_NUGET_API_KEY)</NugetKey>

    <SolutionRoot>$(MSBuildProjectDirectory)\..</SolutionRoot>
    <SolutionName>Michonne</SolutionName>
    <CodeCovURL>https://codecov.io/gh/dupdob/$(SolutionName)</CodeCovURL>
    <ToolsPath>$(SolutionRoot)\tools\</ToolsPath>
    <SourcePath>$(SolutionRoot)\</SourcePath>
    <PackagesPath>$(ArtifactsPath)\Packages</PackagesPath>

    <AssemblyFileNameRoot>$(SolutionRoot)\Michonne.Assemblies\Michonne</AssemblyFileNameRoot>
    <ArtifactsPath>$(SolutionRoot)\Artifacts</ArtifactsPath>
    <BinariesPath>$(ArtifactsPath)\Binaries</BinariesPath>
    <NuGetTools>$(SolutionRoot)\Packages</NuGetTools>
    <DocPath>$(ArtifactsPath)\Docs</DocPath>
    
    <NuGetToolsPath></NuGetToolsPath>
    <NuGetExePath>$(NuGetToolsPath)nuget.exe</NuGetExePath>
    <TestRunnerPath>$(NuGetTools)\NUnit.ConsoleRunner.3.6.1\tools\nunit3-console.exe</TestRunnerPath>
    <CoverToolPath>$(NuGetTools)\OpenCover.4.6.519\tools</CoverToolPath>
    <OpenCoverMSBuildTasksPath>$(NuGetTools)\OpenCover.4.6.519\MSBuild</OpenCoverMSBuildTasksPath>
  </PropertyGroup>
 
<!-- Specifics for appveyor: use env provided nunit runner for result publication-->
  <Choose>
    <When Condition="'$(APPVEYOR)'=='True'">
      <PropertyGroup>
        <NunitOptions>--result=TestResults.xml;format=AppVeyor</NunitOptions>
        <TestRunnerPath>nunit3-console.exe</TestRunnerPath>
      </PropertyGroup>
    </When>
  </Choose>

  <!--Targets-->
  
  <Target Name="RunAll" DependsOnTargets="Build; RunTests; Package" />
  <Target Name="Nightly" DependsOnTargets="SetNightly; RunAll; Publish"/>
  <Target Name="RC" DependsOnTargets="SetRC; RunAll; Publish"/>
  <Target Name="Release" DependsOnTargets="SetRelease; RunAll; Publish"/>
  <Target Name="CI" DependsOnTargets="Build;RunTests; Package" />

  <Target Name="SetNightly">
    <PropertyGroup>
      <PackageStream>nightly</PackageStream>
    </PropertyGroup>
  </Target>
  <Target Name="SetRC">
    <PropertyGroup>
      <PackageStream>RC</PackageStream>
    </PropertyGroup>
  </Target>
  <Target Name="SetRelease">
    <PropertyGroup>
      <PackageStream></PackageStream>
    </PropertyGroup>
  </Target>
  
  <!-- 1- Do the BUILD -->
  <Target Name="DotnetCoreRestore">
    <Message Importance="high" Text="--------- DOTNET RESTORE  -------------------------------------------"/>     
    <Exec Command="dotnet restore $(SolutionRoot)\Michonne.Assemblies\Michonne.Implementation.Standard" />
    <Exec Command="dotnet restore $(SolutionRoot)\Michonne.Assemblies\Michonne.Interfaces.Standard" />
    <Exec Command="dotnet restore $(SolutionRoot)\Tests\Michonne.Tests.Core\Michonne.Tests.Core.csproj" />

    <Message Importance="high" Text="--------- end of DOTNET RESTORE  -------------------------------------"/>
  </Target>
  
  <ItemGroup>
    <ProjectFolder Include="$(SolutionRoot)\Michonne.Assemblies\Michonne.Implementation.45"/>  
    <ProjectFolder Include="$(SolutionRoot)\Tests\Michonne.Tests.45"/>  
    <ProjectFolder Include="$(SolutionRoot)\Tests\Michonne.Tests.40"/>  
    <ProjectFolder Include="$(SolutionRoot)\Tests\Michonne.Tests.35"/>  
    <ProjectFolder Include="$(SolutionRoot)\Michonne.01.Tests"/>  
    <ProjectFolder Include="$(SolutionRoot)\PastaPricer.Tests"/>  
  </ItemGroup>
    
  <Target Name="NugetRestore" DependsOnTargets="DotnetCoreRestore">
    <Message Importance="high" Text="--------- NUGET RESTORE  -------------------------------------------"/>
    
    <Exec Command='"$(NuGetExePath)"  install "%(ProjectFolder.Identity)\packages.config" -o "$(SolutionRoot)\packages"'/>
  
    <Message Importance="high" Text="--------- end of NUGET RESTORE  -------------------------------------"/>
  </Target>
  
  <Target Name="Build" DependsOnTargets="NugetRestore">
    <Message Importance="high" Text="--------- BUILD  -------------------------------------------"/>
    
      <Message Importance="high" Text="
---------------------------------------------------------------
BUILD PROJECT with MSBuildToolsVersion: '$(MSBuildToolsVersion)'
---------------------------------------------------------------
      "  />

<Message Importance="normal" Text="--------- will run: $(SolutionRoot)\$(SolutionName).sln"/>

      <MSBuild Projects="$(SolutionRoot)\$(SolutionName).sln" 
                Targets="Build" 
                Properties="Configuration=$(Configuration)" />

    <Message Importance="high" Text="--------- end of BUILD  -------------------------------------"/>
  </Target>
    
  <!-- 2- BUILD THE DOCS -->
  <Target Name="BuildDocs">

      <Message Importance="high" Text="--------- DOCUMENTATION GENERATION  ---------"/>
      <Message Importance="high" Text="
---------------------------------------------------------------
GENERATING DOCS for:
  - $(BinariesPath)\$(SolutionName).dll
---------------------------------------------------------------
          "  />
      <MakeDir Directories="$(DocPath)" Condition="!Exists('$(DocPath)')" />
      <Exec Command="$(DocuExePath) $(BinariesPath)\$(SolutionName).dll --output=$(DocPath)"/>
      <Exec Command='"$(ZipExe)" a -tzip "$(PackagesPath)\$(SolutionName).docs.zip" "$(DocPath)"' />

      <Message Importance="high" Text="--------- end of DOCUMENTATION GENERATION  ---------"/>
  </Target>

  <!-- 3- Run the TESTS -->
  <Target Name="RunTests" DependsOnTargets="Build">
    <ItemGroup>
      <TestProject Include='$(SolutionRoot)\Tests\Michonne.Tests.35\bin\$(Configuration)\Michonne.Tests.dll'>
        <Fwk>net-3.5</Fwk>
      </TestProject>
      <TestProject Include='$(SolutionRoot)\Tests\Michonne.Tests.40\bin\$(Configuration)\Michonne.Tests.dll'>
        <Fwk>net-4.0</Fwk>
      </TestProject>
      <TestProject Include='$(SolutionRoot)\Tests\Michonne.Tests.45\bin\$(Configuration)\Michonne.Tests.dll'>
        <Fwk>net-4.5</Fwk>
      </TestProject>
      <TestProject Include='$(SolutionRoot)\Michonne.01.Tests\bin\$(Configuration)\Michonne.01.Tests.dll'>
        <Fwk>net-4.5</Fwk>
      </TestProject>
      <TestProject Include='$(SolutionRoot)\PastaPricer.Tests\bin\$(Configuration)\PastaPricer.Tests.dll'>
        <Fwk>net-4.5</Fwk>
      </TestProject>
      <TestProject Include='$(SolutionRoot)\Tests\Michonne.Tests.Core\Michonne.Tests.Core.csproj'>
        <Fwk>core</Fwk>
      </TestProject>
    </ItemGroup>
    <Message Importance="high" Text="
---------------------------------------------------------------
RUN ALL UNIT TESTS
---------------------------------------------------------------
          "  />

    <Message Importance="high" Text="--------- RUN  TESTS ---------"/>

    <Message Importance="normal" Text="Assemblies to test:"/>
    <Message Importance="normal" Text="'%(TestProject.Identity)'"/>

    <Exec Command='"$(TestRunnerPath)" %(TestProject.Identity) $(NunitOptions) /framework:%(TestProject.Fwk)' 
          LogStandardErrorAsError="true" WorkingDirectory="../" Condition="'%(TestProject.Fwk)'!='core'"/>
    <Exec Command='dotnet test %(TestProject.Identity) -c $(Configuration)' 
          LogStandardErrorAsError="true" WorkingDirectory="../" Condition="'%(TestProject.Fwk)'=='core'"/>

    <Message Importance="high" Text="--------- end of RUN TESTS ---------"/>

    <Message Importance="high" Text="--------- Coverage ---------"/>
    <Message Importance="high" Text="Cover for %(TestProject.Identity) : $(SolutionRoot)\%(filename)-coverage.xml" Condition="'%(TestProject.Fwk)'=='net-4.5'"/>
    <Message Importance="high" Text='"$(CoverToolPath)\OpenCover.Console" -target:"$(TestRunnerPath)" -register:user -filter:"+[*]* -[*.Tests]*" -output:"$(SolutionRoot)\%(filename)-coverage.xml -targetargs:""%(TestProject.Identity)" -result="$(SolutionRoot)\results.xml" -framework:%(TestProject.Fwk)""' Condition="'%(TestProject.Fwk)'=='net-4.5'"/>
    <Exec Command='"$(CoverToolPath)\OpenCover.Console" -target:"$(TestRunnerPath)" -register:user -filter:"+[*]* -[*.Tests]*" -output:"$(SolutionRoot)\%(filename)-coverage.xml" -targetargs:""%(TestProject.Identity)" -result="$(SolutionRoot)\results.xml" -framework:%(TestProject.Fwk)""' Condition="'%(TestProject.Fwk)'=='net-4.5'"/>
    
    <Exec  WorkingDirectory="$(SolutionRoot)" Command='codecov -f "$(SolutionRoot)\%(filename)-coverage.xml-coverage.xml" -t 3298ef7c-a693-49a1-8781-12e8985ecd2b -X gcov'
           Condition="'%(TestProject.Fwk)'=='net-4.5'"/>
      <Message Importance="high" Text="--------- end of Coverage ---------"/>

  </Target>

  <!-- 4- Then PACKAGE -->
  <Target Name="Package" DependsOnTargets="Build; RunTests">
    <!--Folders-->
    <ItemGroup>
      <FilesForNuget Include="$(AssemblyFileNameRoot).Implementation.20\bin\$(Configuration)\*Implementation*.*">
        <TargetFwk>net20</TargetFwk>
      </FilesForNuget>
      <FilesForNuget Include="$(AssemblyFileNameRoot).Interfaces.20\bin\$(Configuration)\*Interfaces*.*">
        <TargetFwk>net20</TargetFwk>
      </FilesForNuget>  
      <FilesForNuget Include="$(AssemblyFileNameRoot).Implementation.30\bin\$(Configuration)\*Implementation*.*">
        <TargetFwk>net30</TargetFwk>
      </FilesForNuget>
      <FilesForNuget Include="$(AssemblyFileNameRoot).Interfaces.30\bin\$(Configuration)\*Interfaces*.*">
        <TargetFwk>net30</TargetFwk>
      </FilesForNuget>
      <FilesForNuget Include="$(AssemblyFileNameRoot).Implementation.35\bin\$(Configuration)\*Implementation*.*">
        <TargetFwk>net35</TargetFwk>
      </FilesForNuget>
      <FilesForNuget Include="$(AssemblyFileNameRoot).Interfaces.35\bin\$(Configuration)\*Interfaces*.*">
        <TargetFwk>net35</TargetFwk>
      </FilesForNuget>
      <FilesForNuget Include="$(AssemblyFileNameRoot).Implementation.40\bin\$(Configuration)\*Implementation*.*">
        <TargetFwk>net40</TargetFwk>
      </FilesForNuget>
      <FilesForNuget Include="$(AssemblyFileNameRoot).Interfaces.40\bin\$(Configuration)\*Interfaces*.*">
        <TargetFwk>net40</TargetFwk>
      </FilesForNuget>
      <FilesForNuget Include="$(AssemblyFileNameRoot).Implementation.45\bin\$(Configuration)\*Implementation*.*">
        <TargetFwk>net45</TargetFwk>
      </FilesForNuget>
      <FilesForNuget Include="$(AssemblyFileNameRoot).Interfaces.45\bin\$(Configuration)\*Interfaces*.*">
        <TargetFwk>net45</TargetFwk>
      </FilesForNuget>
      <FilesForNuget Include="$(AssemblyFileNameRoot).Implementation.Standard\bin\$(Configuration)\netstandard1.3\*Implementation*.*">
        <TargetFwk>netstandard1.3</TargetFwk>
      </FilesForNuget>
      <FilesForNuget Include="$(AssemblyFileNameRoot).Interfaces.Standard\bin\$(Configuration)\netstandard1.3\*Interfaces*.*">
        <TargetFwk>netstandard1.3</TargetFwk>
      </FilesForNuget>
    </ItemGroup>

    <Message Importance="high" Text="--------- PACKAGE ---------"/>
      <!-- Copies the dll into an easy path targeted by the .nuspec file. -->
      <!-- Michonne -->
      <Message Importance="low" Text="xcopy %(FilesForNuget.Identity) $(BinariesPath)\%(FilesForNuget.TargetFwk)\ /E /Y" />
      <Exec Command='xcopy "%(FilesForNuget.FullPath)" "$(BinariesPath)\%(FilesForNuget.TargetFwk)\" /E /Y /Q' />
	  
      <!-- Get the version number of the main FV assembly to insert into the nuspec files -->
      <GetAssemblyIdentity AssemblyFiles="$(BinariesPath)\net45\$(SolutionName).Implementation.dll">
        <Output TaskParameter="Assemblies" ItemName="AsmInfo" />
      </GetAssemblyIdentity>

      <PropertyGroup>
        <NuspecFilePath>$(SolutionRoot)\$(SolutionName).nuspec</NuspecFilePath>
        <PackageVersion>%(AsmInfo.Version)</PackageVersion>
      </PropertyGroup>

      <Message Importance="high" Text="[Print] PackageVersion: '$(PackageVersion)'" />
      <Message Importance="high" Text="[Print] NuspecFilePath: '$(NuspecFilePath)'" />

    <VersionBuilding version ="$(PackageVersion)" stream="$(PackageStream)">
      <Output PropertyName="PrettyVersion" TaskParameter="fullVersion" />
    </VersionBuilding>
    <Message Importance="high" Text="`Pretty Version= $(PrettyVersion)" />
      <!-- insert the version number into the nuspec file -->
      <XmlPoke 
        XmlInputPath="$(NuspecFilePath)"
          Namespaces="&lt;Namespace Prefix='x' Uri='http://schemas.microsoft.com/packaging/2011/08/nuspec.xsd' /&gt;"
        Query="x:package/x:metadata/x:version" 
        Value="$(PrettyVersion)" />

      <!-- Gets the release note content from the proper file -->
      <ReadLinesFromFile File="$(SolutionRoot)\ReleaseNoteContentToBeInsertedWithinNuspecFile.txt">
        <Output TaskParameter="Lines" ItemName="FileContents" />
      </ReadLinesFromFile>
      
      <!-- Sets its content into a variable with n/a as the default value -->
      <PropertyGroup>
        <ReleaseNoteContent>n/a</ReleaseNoteContent>
      </PropertyGroup>

      <PropertyGroup Condition=" '@(FileContents,'%0a%0d')' != '' ">
        <ReleaseNoteContent>@(FileContents,'%0a%0d')</ReleaseNoteContent>
      </PropertyGroup>

      <!-- Updates the nuspec file with this variable content -->
      <XmlPoke
        XmlInputPath="$(NuspecFilePath)"
          Namespaces="&lt;Namespace Prefix='x' Uri='http://schemas.microsoft.com/packaging/2011/08/nuspec.xsd' /&gt;"
        Query="x:package/x:metadata/x:releaseNotes"
        Value="$(ReleaseNoteContent)" />

      <Message Importance="high" Text="
---------------------------------------------------------------
CREATING NUGET PACKAGE IN:
    - $(PackagesPath)
---------------------------------------------------------------
            " />
      <MakeDir Directories="$(PackagesPath)" Condition="!Exists('$(PackagesPath)')" />
      <Exec Command='"$(NuGetExePath)" pack "$(NuspecFilePath)" -o "$(PackagesPath)"' LogStandardErrorAsError="true" />
      <PropertyGroup>
        <PackageFileName>$(PackagesPath)\$(SolutionName).$(PrettyVersion).nupkg</PackageFileName>
    </PropertyGroup>
        <Message Importance="high" Text="--------- End of PACKAGE ---------"/>
  </Target>

  <!-- 5- Then Publish -->
  <Target Name="Publish" DependsOnTargets="Package">
  <!--= Publish the package on Nuget-->
  <Message Importance="high" Text="--------- NUGET PUBLISH  -------------------------------------------" Condition="'$(NugetKey)'!='' AND '$(APPVEYOR_PULL_REQUEST_NUMBER)'==''" />
    
  <Exec Command='"$(NuGetExePath)" setApiKey $(NugetKey) -source https://www.nuget.org/api/v2/package -verbosity quiet' EchoOff='true' Condition="'$(NugetKey)'!='' AND '$(APPVEYOR_PULL_REQUEST_NUMBER)'==''"/>
  <Exec Command='"$(NuGetExePath)" push "$(PackageFileName)" -Source https://www.nuget.org/api/v2/package' Condition="'$(NugetKey)'!='' AND '$(APPVEYOR_PULL_REQUEST_NUMBER)'==''"/>
  
  <Message Importance="high" Text="--------- end of NUGET PUBLISH  -------------------------------------" Condition="'$(NugetKey)'!='' AND '$(APPVEYOR_PULL_REQUEST_NUMBER)'==''" />
 </Target> 
</Project>
 